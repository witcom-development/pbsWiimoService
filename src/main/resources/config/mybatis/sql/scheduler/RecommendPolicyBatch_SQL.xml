<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd">
<mapper namespace="org.fincl.miss.server.scheduler.job.recommend.service.RecommendPolicyMapper">
    <select id="getStationInfo" resultType="HashMap">
    	SELECT STATION_ID
    	FROM TB_OPR_STATION
    	ORDER BY CONVERT(STATION_NO, UNSIGNED)
    </select>
    
    <insert id="insertRecommendTimePolicyInfo" parameterType="Map">
    	INSERT INTO TB_SYS_RENT_MAX_CNT_HIST
			(RENT_RETURN_YMD, STATION_ID, REG_DTTM)
		VALUES
			(#{REG_YMD}, #{STATION_ID}, #{REG_DTTM})
    </insert>
    
    <!-- 
    <insert id="insertRecommendWeeklyPolicyInfo" parameterType="Map">
    	<![CDATA[ 
    	INSERT INTO TB_SYS_RECOMMEND_STATION_POLICY
			 (REG_YMD, 
			  STATION_ID, 
			  HOUR_00, 
			  HOUR_01, 
			  HOUR_02, 
			  HOUR_03, 
			  HOUR_04, 
			  HOUR_05, 
			  HOUR_06, 
			  HOUR_07, 
			  HOUR_08, 
			  HOUR_09, 
			  HOUR_10, 
			  HOUR_11, 
			  HOUR_12, 
			  HOUR_13, 
			  HOUR_14, 
			  HOUR_15, 
			  HOUR_16, 
			  HOUR_17, 
			  HOUR_18, 
			  HOUR_19, 
			  HOUR_20, 
			  HOUR_21,
			  HOUR_22,
			  HOUR_23, 
			  REG_DTTM)
		(SELECT DATE_FORMAT(NOW(), '%Y%m%d') AS REG_YMD,
		   STATION_ID,
		   SUM(HOUR_00) AS HOUR_00,
		   SUM(HOUR_01) AS HOUR_01,
		   SUM(HOUR_02) AS HOUR_02,
		   SUM(HOUR_03) AS HOUR_03,
		   SUM(HOUR_04) AS HOUR_04,
		   SUM(HOUR_05) AS HOUR_05,
		   SUM(HOUR_06) AS HOUR_06,
		   SUM(HOUR_07) AS HOUR_07,
		   SUM(HOUR_08) AS HOUR_08,
		   SUM(HOUR_09) AS HOUR_09,
		   SUM(HOUR_10) AS HOUR_10,
		   SUM(HOUR_11) AS HOUR_11,
		   SUM(HOUR_12) AS HOUR_12,
		   SUM(HOUR_13) AS HOUR_13,
		   SUM(HOUR_14) AS HOUR_14,
		   SUM(HOUR_15) AS HOUR_15,
		   SUM(HOUR_16) AS HOUR_16,
		   SUM(HOUR_17) AS HOUR_17,
		   SUM(HOUR_18) AS HOUR_18,
		   SUM(HOUR_19) AS HOUR_19,
		   SUM(HOUR_20) AS HOUR_20,
		   SUM(HOUR_21) AS HOUR_21,
		   SUM(HOUR_22) AS HOUR_22,
		   SUM(HOUR_23) AS HOUR_23,
		   NOW() AS REG_DTTM
		FROM TB_SYS_RENT_MAX_CNT_HIST CH
		WHERE 1=1
		AND RENT_RETURN_YMD >= STR_TO_DATE(NOW(), '%Y-%m-%d') - INTERVAL 7 DAY
		AND RENT_RETURN_YMD <= STR_TO_DATE(NOW(), '%Y-%m-%d') - INTERVAL 3 DAY
		GROUP BY STATION_ID) 
		]]>
    </insert>
     -->
    <!--  주간 추천반납 마일리지 정책_최대/최저치 추출_20170408_JJH -->
    <!-- 
    <insert id="insertRecommendWeeklyPolicyInfo" parameterType="Map">
    	<![CDATA[ 
    	INSERT INTO TB_SYS_RECOMMEND_STATION_POLICY
			 (REG_YMD, 
			  STATION_ID, 
			  HOUR_00, 
			  HOUR_01, 
			  HOUR_02, 
			  HOUR_03, 
			  HOUR_04, 
			  HOUR_05, 
			  HOUR_06, 
			  HOUR_07, 
			  HOUR_08, 
			  HOUR_09, 
			  HOUR_10, 
			  HOUR_11, 
			  HOUR_12, 
			  HOUR_13, 
			  HOUR_14, 
			  HOUR_15, 
			  HOUR_16, 
			  HOUR_17, 
			  HOUR_18, 
			  HOUR_19, 
			  HOUR_20, 
			  HOUR_21,
			  HOUR_22,
			  HOUR_23, 
			  REG_DTTM)
		(SELECT DATE_FORMAT(#{REG_YMD}, '%Y%m%d') AS REG_YMD,
		   STATION_ID,
		   CASE
		   	WHEN ABS(MAX(CONVERT(HOUR_00, SIGNED))) > ABS(MIN(CONVERT(HOUR_00, SIGNED)))
			THEN MAX(CONVERT(HOUR_00, SIGNED))
			ELSE MIN(CONVERT(HOUR_00, SIGNED))
		   END AS HOUR_00,
		   CASE
		   	WHEN ABS(MAX(CONVERT(HOUR_01, SIGNED))) > ABS(MIN(CONVERT(HOUR_01, SIGNED)))
			THEN MAX(CONVERT(HOUR_01, SIGNED))
			ELSE MIN(CONVERT(HOUR_01, SIGNED))
		   END AS HOUR_01,
		   CASE
		   	WHEN ABS(MAX(CONVERT(HOUR_02, SIGNED))) > ABS(MIN(CONVERT(HOUR_02, SIGNED)))
			THEN MAX(CONVERT(HOUR_02, SIGNED))
			ELSE MIN(CONVERT(HOUR_02, SIGNED))
		   END AS HOUR_02,
		   CASE
		   	WHEN ABS(MAX(CONVERT(HOUR_03, SIGNED))) > ABS(MIN(CONVERT(HOUR_03, SIGNED)))
			THEN MAX(CONVERT(HOUR_03, SIGNED))
			ELSE MIN(CONVERT(HOUR_03, SIGNED))
		   END AS HOUR_03,
		   CASE
		   	WHEN ABS(MAX(CONVERT(HOUR_04, SIGNED))) > ABS(MIN(CONVERT(HOUR_04, SIGNED)))
			THEN MAX(CONVERT(HOUR_04, SIGNED))
			ELSE MIN(CONVERT(HOUR_04, SIGNED))
		   END AS HOUR_04,
		   CASE
		   	WHEN ABS(MAX(CONVERT(HOUR_05, SIGNED))) > ABS(MIN(CONVERT(HOUR_05, SIGNED)))
			THEN MAX(CONVERT(HOUR_05, SIGNED))
			ELSE MIN(CONVERT(HOUR_05, SIGNED))
		   END AS HOUR_05,
		   CASE
		   	WHEN ABS(MAX(CONVERT(HOUR_06, SIGNED))) > ABS(MIN(CONVERT(HOUR_06, SIGNED)))
			THEN MAX(CONVERT(HOUR_06, SIGNED))
			ELSE MIN(CONVERT(HOUR_06, SIGNED))
		   END AS HOUR_06,
		   CASE
		   	WHEN ABS(MAX(CONVERT(HOUR_07, SIGNED))) > ABS(MIN(CONVERT(HOUR_07, SIGNED)))
			THEN MAX(CONVERT(HOUR_07, SIGNED))
			ELSE MIN(CONVERT(HOUR_07, SIGNED))
		   END AS HOUR_07,
		   CASE
		   	WHEN ABS(MAX(CONVERT(HOUR_08, SIGNED))) > ABS(MIN(CONVERT(HOUR_08, SIGNED)))
			THEN MAX(CONVERT(HOUR_08, SIGNED))
			ELSE MIN(CONVERT(HOUR_08, SIGNED))
		   END AS HOUR_08,
		   CASE
		   	WHEN ABS(MAX(CONVERT(HOUR_09, SIGNED))) > ABS(MIN(CONVERT(HOUR_09, SIGNED)))
			THEN MAX(CONVERT(HOUR_09, SIGNED))
			ELSE MIN(CONVERT(HOUR_09, SIGNED))
		   END AS HOUR_09,
		   CASE
		   	WHEN ABS(MAX(CONVERT(HOUR_10, SIGNED))) > ABS(MIN(CONVERT(HOUR_10, SIGNED)))
			THEN MAX(CONVERT(HOUR_10, SIGNED))
			ELSE MIN(CONVERT(HOUR_10, SIGNED))
		   END AS HOUR_10,
		   CASE
		   	WHEN ABS(MAX(CONVERT(HOUR_11, SIGNED))) > ABS(MIN(CONVERT(HOUR_11, SIGNED)))
			THEN MAX(CONVERT(HOUR_11, SIGNED))
			ELSE MIN(CONVERT(HOUR_11, SIGNED))
		   END AS HOUR_11,
		   CASE
		   	WHEN ABS(MAX(CONVERT(HOUR_12, SIGNED))) > ABS(MIN(CONVERT(HOUR_12, SIGNED)))
			THEN MAX(CONVERT(HOUR_12, SIGNED))
			ELSE MIN(CONVERT(HOUR_12, SIGNED))
		   END AS HOUR_12,
		   CASE
		   	WHEN ABS(MAX(CONVERT(HOUR_13, SIGNED))) > ABS(MIN(CONVERT(HOUR_13, SIGNED)))
			THEN MAX(CONVERT(HOUR_13, SIGNED))
			ELSE MIN(CONVERT(HOUR_13, SIGNED))
		   END AS HOUR_13,
		   CASE
		   	WHEN ABS(MAX(CONVERT(HOUR_14, SIGNED))) > ABS(MIN(CONVERT(HOUR_14, SIGNED)))
			THEN MAX(CONVERT(HOUR_14, SIGNED))
			ELSE MIN(CONVERT(HOUR_14, SIGNED))
		   END AS HOUR_14,
		   CASE
		   	WHEN ABS(MAX(CONVERT(HOUR_15, SIGNED))) > ABS(MIN(CONVERT(HOUR_15, SIGNED)))
			THEN MAX(CONVERT(HOUR_15, SIGNED))
			ELSE MIN(CONVERT(HOUR_15, SIGNED))
		   END AS HOUR_15,
		   CASE
		   	WHEN ABS(MAX(CONVERT(HOUR_16, SIGNED))) > ABS(MIN(CONVERT(HOUR_16, SIGNED)))
			THEN MAX(CONVERT(HOUR_16, SIGNED))
			ELSE MIN(CONVERT(HOUR_16, SIGNED))
		   END AS HOUR_16,
		   CASE
		   	WHEN ABS(MAX(CONVERT(HOUR_17, SIGNED))) > ABS(MIN(CONVERT(HOUR_17, SIGNED)))
			THEN MAX(CONVERT(HOUR_17, SIGNED))
			ELSE MIN(CONVERT(HOUR_17, SIGNED))
		   END AS HOUR_17,
		   CASE
		   	WHEN ABS(MAX(CONVERT(HOUR_18, SIGNED))) > ABS(MIN(CONVERT(HOUR_18, SIGNED)))
			THEN MAX(CONVERT(HOUR_18, SIGNED))
			ELSE MIN(CONVERT(HOUR_18, SIGNED))
		   END AS HOUR_18,
		   CASE
		   	WHEN ABS(MAX(CONVERT(HOUR_19, SIGNED))) > ABS(MIN(CONVERT(HOUR_19, SIGNED)))
			THEN MAX(CONVERT(HOUR_19, SIGNED))
			ELSE MIN(CONVERT(HOUR_19, SIGNED))
		   END AS HOUR_19,
		   CASE
		   	WHEN ABS(MAX(CONVERT(HOUR_20, SIGNED))) > ABS(MIN(CONVERT(HOUR_20, SIGNED)))
			THEN MAX(CONVERT(HOUR_20, SIGNED))
			ELSE MIN(CONVERT(HOUR_20, SIGNED))
		   END AS HOUR_20,
		   CASE
		   	WHEN ABS(MAX(CONVERT(HOUR_21, SIGNED))) > ABS(MIN(CONVERT(HOUR_21, SIGNED)))
			THEN MAX(CONVERT(HOUR_21, SIGNED))
			ELSE MIN(CONVERT(HOUR_21, SIGNED))
		   END AS HOUR_21,
		   CASE
		   	WHEN ABS(MAX(CONVERT(HOUR_22, SIGNED))) > ABS(MIN(CONVERT(HOUR_22, SIGNED)))
			THEN MAX(CONVERT(HOUR_22, SIGNED))
			ELSE MIN(CONVERT(HOUR_22, SIGNED))
		   END AS HOUR_22,
		   CASE
		   	WHEN ABS(MAX(CONVERT(HOUR_23, SIGNED))) > ABS(MIN(CONVERT(HOUR_23, SIGNED)))
			THEN MAX(CONVERT(HOUR_23, SIGNED))
			ELSE MIN(CONVERT(HOUR_23, SIGNED))
		   END AS HOUR_23,
		   NOW() AS REG_DTTM
		FROM TB_SYS_RENT_MAX_CNT_HIST CH
		WHERE 1=1
 		AND RENT_RETURN_YMD >= STR_TO_DATE(#{REG_DTTM}, '%Y-%m-%d') - INTERVAL 7 DAY
 		AND RENT_RETURN_YMD <= STR_TO_DATE(#{REG_DTTM}, '%Y-%m-%d') - INTERVAL 3 DAY
		GROUP BY STATION_ID) 
		]]>
    </insert>
      -->
      
    <!-- 주간 추천반납 마일리지 정책_평균추출_20170408_JJH -->  
    <insert id="insertRecommendWeeklyPolicyInfo" parameterType="Map">
    	<![CDATA[ 
    	INSERT INTO TB_SYS_RECOMMEND_STATION_POLICY
			 (REG_YMD, 
			  STATION_ID, 
			  HOUR_00, 
			  HOUR_01, 
			  HOUR_02, 
			  HOUR_03, 
			  HOUR_04, 
			  HOUR_05, 
			  HOUR_06, 
			  HOUR_07, 
			  HOUR_08, 
			  HOUR_09, 
			  HOUR_10, 
			  HOUR_11, 
			  HOUR_12, 
			  HOUR_13, 
			  HOUR_14, 
			  HOUR_15, 
			  HOUR_16, 
			  HOUR_17, 
			  HOUR_18, 
			  HOUR_19, 
			  HOUR_20, 
			  HOUR_21,
			  HOUR_22,
			  HOUR_23, 
			  REG_DTTM)
		(SELECT DATE_FORMAT(#{REG_YMD}, '%Y%m%d') AS REG_YMD,
		   STATION_ID,
		   CONVERT(AVG(CONVERT(HOUR_00, SIGNED)), SIGNED) AS HOUR_00,
		   CONVERT(AVG(CONVERT(HOUR_01, SIGNED)), SIGNED) AS HOUR_01,
		   CONVERT(AVG(CONVERT(HOUR_02, SIGNED)), SIGNED) AS HOUR_02,
		   CONVERT(AVG(CONVERT(HOUR_03, SIGNED)), SIGNED) AS HOUR_03,
		   CONVERT(AVG(CONVERT(HOUR_04, SIGNED)), SIGNED) AS HOUR_04,
		   CONVERT(AVG(CONVERT(HOUR_05, SIGNED)), SIGNED) AS HOUR_05,
		   CONVERT(AVG(CONVERT(HOUR_06, SIGNED)), SIGNED) AS HOUR_06,
		   CONVERT(AVG(CONVERT(HOUR_07, SIGNED)), SIGNED) AS HOUR_07,
		   CONVERT(AVG(CONVERT(HOUR_08, SIGNED)), SIGNED) AS HOUR_08,
		   CONVERT(AVG(CONVERT(HOUR_09, SIGNED)), SIGNED) AS HOUR_09,
		   CONVERT(AVG(CONVERT(HOUR_10, SIGNED)), SIGNED) AS HOUR_10,
		   CONVERT(AVG(CONVERT(HOUR_11, SIGNED)), SIGNED) AS HOUR_11,
		   CONVERT(AVG(CONVERT(HOUR_12, SIGNED)), SIGNED) AS HOUR_12,
		   CONVERT(AVG(CONVERT(HOUR_13, SIGNED)), SIGNED) AS HOUR_13,
		   CONVERT(AVG(CONVERT(HOUR_14, SIGNED)), SIGNED) AS HOUR_14,
		   CONVERT(AVG(CONVERT(HOUR_15, SIGNED)), SIGNED) AS HOUR_15,
	  	   CONVERT(AVG(CONVERT(HOUR_16, SIGNED)), SIGNED) AS HOUR_16,
		   CONVERT(AVG(CONVERT(HOUR_17, SIGNED)), SIGNED) AS HOUR_17,
		   CONVERT(AVG(CONVERT(HOUR_18, SIGNED)), SIGNED) AS HOUR_18,
		   CONVERT(AVG(CONVERT(HOUR_19, SIGNED)), SIGNED) AS HOUR_19,
		   CONVERT(AVG(CONVERT(HOUR_20, SIGNED)), SIGNED) AS HOUR_20,
		   CONVERT(AVG(CONVERT(HOUR_21, SIGNED)), SIGNED) AS HOUR_21,
		   CONVERT(AVG(CONVERT(HOUR_22, SIGNED)), SIGNED) AS HOUR_22,
		   CONVERT(AVG(CONVERT(HOUR_23, SIGNED)), SIGNED) AS HOUR_23,
		   NOW() AS REG_DTTM
		FROM TB_SYS_RENT_MAX_CNT_HIST CH
		WHERE 1=1
 		AND RENT_RETURN_YMD >= STR_TO_DATE(#{REG_DTTM}, '%Y-%m-%d') - INTERVAL 7 DAY
 		AND RENT_RETURN_YMD <= STR_TO_DATE(#{REG_DTTM}, '%Y-%m-%d') - INTERVAL 3 DAY
		GROUP BY STATION_ID) 
		]]>
    </insert>  
     
</mapper>
