<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd">

<mapper namespace="org.fincl.miss.server.remote.security.service.AdminMapper">
    
    <!--
	 spring security의 기본 인증 처리를 위한 조회
	 -->
    <select id = "getLoginUserDetail" parameterType="hashmap" resultType="hashmap">
		SELECT
			 A.USER_ID AS USER_ID,
			 A.PASSWORD,
		     A.ENABLED,
		     (CASE WHEN A.PASSWORD_EXPIRE_DATE &lt; SYSDATE THEN 0 ELSE 1 END) PASSWORD_NON_EXPIRED,
		     (CASE WHEN NVL(A.TRY_COUNT,0) &lt; 5 THEN 1 ELSE 0 END) ACCOUNT_NON_LOCKED,
		     B.GROUP_IDX AS GROUP_IDX,
		     A.USER_NAME,
		     A.USER_IDX
		FROM
			 TB_OAM_USERS A
			 LEFT OUTER JOIN TB_OAM_GROUP_MAPPING B ON ( A.USER_IDX = B.USER_IDX )
		     LEFT OUTER JOIN TB_OAM_GROUPS C ON (B.GROUP_IDX = C.GROUP_IDX)
		WHERE A.USER_ID = #{userId}
	</select>
	
    <!--
	 자신이 속한 그룹의 권한 
	 자신이 가지고 있는 권한
	 자신의 상위 상위이 가지고 있는 권한
	 위 경우를 모두 포함. 
	 -->
	<select id="getAuthList" parameterType="hashmap" resultType="hashmap">
		SELECT 
			D.USER_ID USER_ID,E.ROLE_NAME ROLE_NAME,F.GROUP_NAME GROUP_NAME, C.REF_IDX, C.REF_TYPE, D.USER_NAME
		FROM 
			TB_OAM_ROLE_MAPPING C  
			INNER JOIN (
				SELECT
  					A.USER_IDX,B.GROUP_IDX, A.USER_ID, A.USER_NAME
    			FROM 
    				TB_OAM_USERS A 
      				LEFT OUTER JOIN (
        				SELECT
 							B.CHILD_GROUP "GROUP_IDX", C.GROUP_NAME, (SELECT USER_IDX FROM TB_OAM_USERS WHERE USER_ID = #{userId}) "USER_IDX"
   						FROM 
   							TB_OAM_GROUP_HIERARCHY B
   							INNER JOIN TB_OAM_GROUPS C ON (B.CHILD_GROUP = C.GROUP_IDX)
   							LEFT OUTER JOIN TB_OAM_GROUP_MAPPING D ON (C.GROUP_IDX = D.GROUP_IDX)
						START WITH B.CHILD_GROUP IN (
  										SELECT
  											B.GROUP_IDX
    									FROM 
    										TB_OAM_USERS A 
      										LEFT OUTER JOIN TB_OAM_GROUP_MAPPING B ON (A.USER_IDX = B.USER_IDX )
    									WHERE A.USER_ID = #{userId}
  						)
  						CONNECT BY PRIOR B.PARENT_GROUP = B.CHILD_GROUP
      				) B ON (A.USER_IDX = B.USER_IDX )
    			WHERE A.USER_ID = #{userId}
  			) D ON ((C.REF_IDX = D.USER_IDX AND C.REF_TYPE = 'U') OR (C.REF_IDX = D.GROUP_IDX AND C.REF_TYPE = 'G') )
  			INNER JOIN TB_OAM_ROLES E ON (E.ROLE_IDX = C.ROLE_IDX)
  			INNER JOIN TB_OAM_GROUPS F ON (D.GROUP_IDX = F.GROUP_IDX)
  		WHERE  
  			1 = 1
	</select>
</mapper>
