<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:util="http://www.springframework.org/schema/util"
	   xmlns:hz="http://www.hazelcast.com/schema/spring"
	   xmlns:cache="http://www.springframework.org/schema/cache"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
						   http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
						   http://www.hazelcast.com/schema/spring http://www.hazelcast.com/schema/spring/hazelcast-spring.xsd
						   http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd">

	<util:properties id="clusterProps" location="classpath:config/properties/cluster.xml"/>
	
	<cache:annotation-driven cache-manager="cacheManager" />
	
	<bean id="cacheManager" class="com.hazelcast.spring.cache.HazelcastCacheManager">
	  <constructor-arg ref="cluster"/>
	</bean>

	<hz:hazelcast id="cluster">
		<hz:config>
			<!-- <hz:management-center enabled="true" url="http://127.0.0.1:8780/mancenter-3.4.2"/> -->
			<hz:network port="#{clusterProps.port}" port-auto-increment="false">
				<hz:join>
					<hz:multicast enabled="false"/>
					<hz:tcp-ip enabled="true" connection-timeout-seconds="20">
						<hz:members>#{clusterProps.members}</hz:members>
					</hz:tcp-ip>
				</hz:join>
			</hz:network>
			
			<hz:map name="serviceRepository" backup-count="2">
				<hz:entry-listeners>
					<hz:entry-listener implementation="serviceEntryListener"/>
				</hz:entry-listeners>
			</hz:map>
			<hz:map name="serviceGroupRepository" backup-count="2"/>
			<hz:map name="candidateServiceRepository" backup-count="2"/>
			<hz:map name="candidateServiceGroupRepository" backup-count="2"/>
			<hz:map name="serviceTesterRepository" backup-count="2"/>
			<hz:map name="logInfoSync" backup-count="2">
				<hz:entry-listeners>
					<hz:entry-listener implementation="logSyncServiceListener"/>
				</hz:entry-listeners>
			</hz:map>
			<hz:map name="scheduledTaskRepository" backup-count="2">
				<hz:entry-listeners>
					<hz:entry-listener implementation="scheduledTaskEntryListener"/>
				</hz:entry-listeners>
			</hz:map>
			<hz:map name="schedulableTaskRepository" backup-count="2"/>

			<hz:map name="telegramHeaders" backup-count="2"/>
			<hz:map name="telegramBodies" backup-count="2"/>
			
			<hz:map name="telegramInterfaces" backup-count="2"/>
			<hz:map name="telegramInterfacesInfo" backup-count="2"/>
			<hz:map name="smsMessage" backup-count="2"/>
			
			<hz:map name="jobRepository" backup-count="2"  time-to-live-seconds="200"/>
			
			<hz:map name="smartTransRepository" backup-count="2"/>
			
			<hz:map name="userLogMap" backup-count="2"/>
			<hz:topic name="pubSubMessage">
				<hz:statistics-enabled>true</hz:statistics-enabled>
				<hz:global-ordering-enabled>true</hz:global-ordering-enabled>
			</hz:topic>
			
			
		</hz:config>
		
	</hz:hazelcast>
	
	<hz:map id="serviceRepository" name="serviceRepository" instance-ref="cluster"/>
	<hz:map id="serviceGroupRepository" name="serviceGroupRepository" instance-ref="cluster"/>
	<hz:map id="candidateServiceRepository" name="candidateServiceRepository" instance-ref="cluster"/>
	<hz:map id="candidateServiceGroupRepository" name="candidateServiceGroupRepository" instance-ref="cluster"/>
	<hz:map id="serviceTesterRepository" name="serviceTesterRepository" instance-ref="cluster"/>
	<hz:map id="logInfoSync" name="logInfoSync" instance-ref="cluster"/>
	<hz:map id="telegramHeaders" name="telegramHeaders" instance-ref="cluster"/>
	<hz:map id="telegramBodies" name="telegramBodies" instance-ref="cluster"/> 
	<hz:map id="telegramInterfaces" name="telegramInterfaces" instance-ref="cluster"/>
	<hz:map id="telegramInterfacesInfo" name="telegramInterfacesInfo" instance-ref="cluster"/>
	<hz:map id="userLogMap" name="userLogMap" instance-ref="cluster"/>
	<hz:map id="scheduledTaskRepository" name="scheduledTaskRepository" instance-ref="cluster"/>
	<hz:map id="schedulableTaskRepository" name="schedulableTaskRepository" instance-ref="cluster"/>
	
	<hz:map id="e2eKeyRepository" name="e2eKeyRepository" instance-ref="cluster"/>
	
	<hz:topic id="pubSubMessage" name="pubSubMessage" instance-ref="cluster"/>
	
	<bean id="serviceEntryListener" class="org.fincl.miss.server.service.metadata.ServiceEntryListener"/>
	
	<!-- 로거별 로그 레벨을 조정하는 서비스 -->
	<bean id="logSyncService" class="org.fincl.miss.server.logging.logger.service.impl.LogSyncServiceImpl">
		<property name="logInfoSync" ref="logInfoSync"/>
	</bean>
	<bean id="logInfoService" class="org.fincl.miss.core.logging.service.impl.LogInfoServiceImpl"></bean>
	
	<!-- 로그 레벨 조정 리스너 -->
	<bean id="logSyncServiceListener" class="org.fincl.miss.server.logging.logger.service.LogSyncServiceListener"></bean>
	
	<!-- 서비스 레벨 조정 필터의 리스너(serviceEntryListener에서 호출) -->
	<bean id="ServiceLogLevelUpdater" class="org.fincl.miss.server.logging.logger.service.ServiceLogLevelUpdater"></bean>
	
	<!-- 로그 관리 대상 사용자 정보를 동기화 -->
	<bean id="userLogMapService" class="org.fincl.miss.core.logging.service.impl.UserLogMapServiceImpl">
		<property name="userLogMap" ref="userLogMap"></property>
	</bean>
	<bean id="userLogService" class="org.fincl.miss.server.logging.logger.service.impl.UserLogServiceImpl"></bean>
	
	<bean id="scheduledTaskEntryListener" class="org.fincl.miss.core.scheduler.ScheduledTaskEntryListener"/>

</beans>
